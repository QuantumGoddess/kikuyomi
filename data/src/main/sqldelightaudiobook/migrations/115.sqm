import java.util.Date;

DROP INDEX IF EXISTS audiobookhistory_history_chapter_id_index;
DROP VIEW IF EXISTS audiobookhistoryView;

/**
 *  [last_read] was made not-null
 *  [time_read] was removed
 *  `audiobookhistory` prefix was removed from table name
 */
ALTER TABLE audiobookhistory RENAME TO audiobookhistory_temp;
CREATE TABLE audiobookhistory(
    _id INTEGER NOT NULL PRIMARY KEY,
    chapter_id INTEGER NOT NULL UNIQUE,
    last_read INTEGER AS Date NOT NULL,
    FOREIGN KEY(chapter_id) REFERENCES chapters (_id)
    ON DELETE CASCADE
);
INSERT INTO audiobookhistory
SELECT audiobookhistory_id, audiobookhistory_chapter_id, coalesce(audiobookhistory_last_read, 0)
FROM audiobookhistory_temp;

/**
 *  [history.time_read] was added as a column in [historyView]
 */
CREATE VIEW audiobookhistoryView AS
SELECT
    audiobookhistory._id AS id,
    audiobooks._id AS audiobookId,
    chapters._id AS chapterId,
    audiobooks.title,
    audiobooks.thumbnail_url AS thumbnailUrl,
    chapters.chapter_number AS chapterNumber,
    audiobookhistory.last_read AS readAt,
    max_last_read.last_read AS maxReadAt,
    max_last_read.chapter_id AS maxReadAtChapterId
FROM audiobooks
JOIN chapters
ON audiobooks._id = chapters.audiobook_id
JOIN audiobookhistory
ON chapters._id = audiobookhistory.chapter_id
JOIN (
    SELECT chapters.audiobook_id,chapters._id AS chapter_id, MAX(audiobookhistory.last_read) AS last_read
    FROM chapters JOIN audiobookhistory
    ON chapters._id = audiobookhistory.chapter_id
    GROUP BY chapters.audiobook_id
) AS max_last_read
ON chapters.audiobook_id = max_last_read.audiobook_id;

CREATE INDEX audiobookhistory_history_chapter_id_index ON audiobookhistory(chapter_id);